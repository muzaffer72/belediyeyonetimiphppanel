-- Tüm partilerin puanlarını sıfırla
UPDATE political_parties SET score = 0;

-- Şehirlerin çözüm oranlarını hesapla - FORMÜL: (Çözülmüş Şikayet + Teşekkür) / (Toplam Şikayet + Teşekkür) * 100
UPDATE cities c
SET solution_rate = (
    CASE 
        WHEN (COALESCE(c.total_complaints, 0) + COALESCE(c.thanks_count, 0)) = 0 THEN 0
        ELSE ((COALESCE(c.solved_complaints, 0) + COALESCE(c.thanks_count, 0)) * 100.0 / 
              (COALESCE(c.total_complaints, 0) + COALESCE(c.thanks_count, 0)))
    END
);

-- İlçelerin çözüm oranlarını hesapla - aynı formülle
UPDATE districts d
SET solution_rate = (
    CASE 
        WHEN (COALESCE(d.total_complaints, 0) + COALESCE(d.thanks_count, 0)) = 0 THEN 0
        ELSE ((COALESCE(d.solved_complaints, 0) + COALESCE(d.thanks_count, 0)) * 100.0 / 
              (COALESCE(d.total_complaints, 0) + COALESCE(d.thanks_count, 0)))
    END
);

-- Partilerin şehirlerdeki ortalama çözüm oranını hesapla
WITH city_party_rates AS (
    SELECT 
        pp.id AS party_id,
        pp.name AS party_name,
        COALESCE(AVG(c.solution_rate), 0) AS avg_solution_rate
    FROM 
        political_parties pp
    LEFT JOIN 
        cities c ON c.political_party_id = pp.id
    GROUP BY 
        pp.id, pp.name
),
-- Partileri çözüm oranına göre sırala
ranked_parties AS (
    SELECT 
        party_id,
        party_name,
        avg_solution_rate,
        RANK() OVER (ORDER BY avg_solution_rate DESC) AS rank
    FROM 
        city_party_rates
),
-- 100'lük sistemde puanları hesapla (eşit performanslı partilere eşit puan)
party_scores AS (
    SELECT 
        party_id,
        party_name,
        avg_solution_rate,
        rank,
        -- Aynı sıradaki (eşit performanslı) parti sayısını bul
        COUNT(*) OVER (PARTITION BY rank) AS equal_rank_count,
        -- Toplam parti sayısı
        (SELECT COUNT(*) FROM ranked_parties) AS total_parties,
        -- Her sıra için toplam puan havuzu
        100.0 * (SELECT COUNT(*) FROM ranked_parties WHERE rank = rp.rank) / 
        (SELECT COUNT(*) FROM ranked_parties) AS rank_score_pool
    FROM 
        ranked_parties rp
),
-- Final puan hesaplaması (eşit performanslı partilere eşit puan)
final_scores AS (
    SELECT 
        party_id,
        party_name,
        avg_solution_rate,
        rank,
        -- Her sıradaki parti için puan havuzunu eşit dağıt
        rank_score_pool / equal_rank_count AS final_score
    FROM 
        party_scores
)
-- Puanları political_parties tablosuna güncelle
UPDATE political_parties pp
SET score = (
    SELECT fs.final_score
    FROM final_scores fs
    WHERE fs.party_id = pp.id
);